{"version":3,"sources":["graph/index.tsx","graph/useDraggable.ts","graph/backgroundgraph.tsx","app.tsx","index.tsx"],"names":["ActionType","initialState","dragging","initial","x","y","current","useDraggable","ref","onDragDone","useState","setDragging","dragged","useMemo","onMouseMove","e","clientX","clientY","onMouseUp","useEffect","currentRef","addEventListener","removeEventListener","onMouseDown","button","repeatArray","array","times","repeat","split","flatMap","BackgroundGraph","vertical","horizontal","width","height","viewBox","sumVertical","reduce","a","b","sumHorizontal","verticalPath","moveRightBy","newX","pathCommand","horizontalPath","moveDownBy","newY","xmlns","stroke","d","nodes","edges","GraphContext","createContext","graphReducer","state","action","type","UpdateRelativePosition","newState","index","findIndex","node","uid","push","UpdateAttribute","AddEdge","Draggable","children","nodeRef","useContext","getPosition","dispatch","updatePosition","style","left","top","Node","position","userSelect","useNode","useUID","useRef","args","GraphComponent","background","useReducer","Provider","value","find","backgroundColor","color","overflow","GenericNode1","padding","GenericNode2","onClose","onClick","App","max","items","num","setNum","map","i","filter","itm","remove","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0921f1fa.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer, useRef, useEffect } from 'react';\nimport { useUID } from 'react-uid';\nimport useDraggable from './useDraggable';\nimport BackgroundGraph from './backgroundgraph';\n\ntype Uid = string;\ntype Color = string;\ntype RefType = { current: any }; // TODO: type this?\n\ninterface Graph {\n\tnodes: any[];\n\tedges: any[];\n}\n\nconst initialState : Graph = {\n\tnodes: [],\n\tedges: [],\n}\n\nconst GraphContext = createContext<{\n\tstate?: Graph;\n\tdispatch?: Function;\n\tgetPosition?: Function;\n\tref: RefType;\n}>({\n\tref: { current: null }\n});\n\nenum ActionType {\n\tUpdateRelativePosition,\n\tUpdateAttribute,\n\tAddEdge,\n\tRemoveEdge,\n};\n\ntype Actions =\n | { type: ActionType.UpdateRelativePosition, uid: Uid, x: Number, y: Number }\n | { type: ActionType.UpdateAttribute, uid: Uid, key: String, value: any }\n | { type: ActionType.AddEdge, fromNode: Uid, toNode: Uid };\n\nconst graphReducer = (state : Graph, action: Actions) => {\n\tswitch(action.type) {\n\t\tcase ActionType.UpdateRelativePosition:\n\t\t\tconst newState = { ...state };\n\t\t\tconst index = state.nodes.findIndex((node) => node.uid === action.uid);\n\t\t\tif(index === -1) {\n\t\t\t\tnewState.nodes.push({uid: action.uid, x: action.x, y: action.y});\n\t\t\t} else {\n\t\t\t\tnewState.nodes[index].x += action.x;\n\t\t\t\tnewState.nodes[index].y += action.y;\n\t\t\t}\n\t\t\treturn newState;\n\t\tcase ActionType.UpdateAttribute:\n\t\tcase ActionType.AddEdge:\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\treturn state;\n};\n\nconst updatePosition = (uid: Uid, x: Number, y: Number) => ({ type: ActionType.UpdateRelativePosition, uid, x, y });\n\ninterface GraphComponentProps {\n\twidth: number,\n\theight: number,\n\tbackground?: Color,\n}\n\nconst GraphComponent : React.FC<GraphComponentProps> = ({\n\tchildren,\n\twidth,\n\theight,\n\tbackground = '#1c2e60'\n}) => {\n\tconst ref = useRef(null);\n\tconst [state, dispatch] = useReducer(graphReducer, initialState);\n\tconst getPosition = (uid: Uid) => {\n\t\tconst node = state.nodes.find((node) => node.uid === uid);\n\t\tconst defaultValues = { x: 0, y: 0 };\n\t\treturn { ...defaultValues, ...node };\n\t}\n\n\treturn <GraphContext.Provider value={{\n\t\tstate,\n\t\tdispatch,\n\t\tgetPosition,\n\t\tref,\n\t}}>\n\t\t<div style={{\n\t\t\twidth: `${width}px`,\n\t\t\theight: `${height}px`,\n\t\t\tbackgroundColor: background,\n\t\t\tcolor: '#eaeaea',\n\t\t\tposition: 'relative',\n\t\t\toverflow: 'hidden',\n\t\t}}\n\t\tref={ref}\n\t\t>\n\t\t\t<BackgroundGraph\n\t\t\t\theight={height}\n\t\t\t\twidth={width}\n\t\t\t\tvertical={[50, 10, 10, 10]}\n\t\t\t\thorizontal={[50, 10, 10, 10]}\n\t\t\t\t/>\n\t\t\t{children}\n\t\t</div>\n\t</GraphContext.Provider>\n};\n\n\ninterface DraggableProps {\n\tuid: Uid;\n\tnodeRef: RefType;\n}\n\nconst Draggable : React.FC<DraggableProps> = ({ uid, children, nodeRef }) => {\n\tconst { getPosition, dispatch, ref } = useContext(GraphContext);\n\tconst { x, y } = getPosition!(uid);\n\tconst { dragged, onMouseDown } = useDraggable(ref, (dragged : {x: number, y: number}) => {\n\t\tdispatch!(updatePosition(\n\t\t\tuid,\n\t\t\tdragged.x,\n\t\t\tdragged.y,\n\t\t));\n\t});\n\n\tuseEffect(() => {\n\t\tnodeRef.current.style.left = (x + dragged.x) + 'px';\n\t\tnodeRef.current.style.top = (y + dragged.y) + 'px';\n\t}, [x, y, dragged, nodeRef]);\n\n\treturn <div onMouseDown={onMouseDown}>{children}</div>;\n};\n\n\ninterface NodeProps {\n\tuid: Uid;\n\tnodeRef: RefType;\n}\n\nconst Node : React.FC<NodeProps> = ({ children, uid, nodeRef }) => {\n\tconst { getPosition } = useContext(GraphContext);\n\tconst { x, y } = getPosition!(uid);\n\n\treturn <div style={{\n\t\tposition: 'absolute',\n\t\tuserSelect: 'none',\n\t\tleft: `${x}px`,\n\t\ttop: `${y}px`,\n\t}}\n\tref={nodeRef}\n\t>\n\t\t{children}\n\t</div>\n};\n\nexport const useNode = () => {\n\tconst uid = useUID();\n\tconst nodeRef = useRef(null);\n\n\treturn {\n\t\tuid,\n\t\tNode: ({ ...args }) => <Node uid={uid} nodeRef={nodeRef} {...args} />,\n\t\tDraggable: ({ ...args }) => <Draggable uid={uid} nodeRef={nodeRef} {...args} />,\n\t};\n}\n\nexport default GraphComponent;\n","import { useState, useEffect, useMemo } from 'react';\n\ninterface Vector {\n\tx: number,\n\ty: number,\n};\n\ninterface DraggableInterface {\n\tdragging: boolean;\n\tinitial: Vector;\n\tcurrent: Vector;\n}\n\nconst initialState : DraggableInterface = {\n\tdragging: false,\n\tinitial: { x: 0, y: 0 },\n\tcurrent: { x: 0, y: 0 },\n};\n\nconst useDraggable = (ref: { current: any }, onDragDone : Function) => {\n\tconst [dragging, setDragging] = useState(initialState);\n\tconst dragged = useMemo<Vector>(() => ({\n\t\tx: dragging.current.x - dragging.initial.x,\n\t\ty: dragging.current.y - dragging.initial.y,\n\t}), [dragging]);\n\n\tconst onMouseDown = (e : React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n\t\t// Only drag on left click\n\t\tif(e.button === 0) {\n\t\t\tsetDragging({\n\t\t\t\tdragging: true,\n\t\t\t\tinitial: {\n\t\t\t\t\tx: e.clientX,\n\t\t\t\t\ty: e.clientY,\n\t\t\t\t},\n\t\t\t\tcurrent: {\n\t\t\t\t\tx: e.clientX,\n\t\t\t\t\ty: e.clientY,\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t};\n\tconst onMouseMove = (e: MouseEvent) => {\n\t\tif(dragging.dragging) {\n\t\t\tsetDragging({\n\t\t\t\t...dragging,\n\t\t\t\tcurrent: {\n\t\t\t\t\tx: e.clientX,\n\t\t\t\t\ty: e.clientY,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\tconst onMouseUp = (e: MouseEvent) => {\n\t\tif(dragging.dragging) {\n\t\t\tonDragDone(dragged);\n\t\t\tsetDragging(initialState);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tvar currentRef : any = null;\n\t\tif(ref.current) {\n\t\t\tcurrentRef = ref.current;\n\t\t\tcurrentRef.addEventListener('mousemove', onMouseMove);\n\t\t\tcurrentRef.addEventListener('mouseup', onMouseUp);\n\t\t}\n\n\t\treturn () => {\n\t\t\tif(currentRef) {\n\t\t\t\tcurrentRef.removeEventListener('mousemove', onMouseMove);\n\t\t\t\tcurrentRef.removeEventListener('mouseup', onMouseUp);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn { dragged, onMouseDown };\n};\n\nexport default useDraggable;\n","import React from 'react';\n\n/*\n *\tRepeats an array a number of times\n *\n *  Example:\n *    repeatArray([1, 2, 3], 2); // Result: [1, 2, 3, 1, 2, 3]\n */\nconst repeatArray = (array : any[], times : number) =>\n\t'.'.repeat(times).split('').flatMap(() => array);\n\ninterface BackgroundGraphProps {\n\tvertical: number[];\n\thorizontal: number[];\n\twidth: number;\n\theight: number;\n};\n\nconst BackgroundGraph : React.FC<BackgroundGraphProps> = ({ vertical, horizontal, width, height }) => {\n\tconst viewBox = `0 0 ${width} ${height}`;\n\tconst sumVertical   = vertical.reduce((a,b) => a+b, 0);\n\tconst sumHorizontal = horizontal.reduce((a,b) => a+b, 0);\n\n\t// Repeat horizontal and vertical lines until they fill the width and height\n\tvertical   = repeatArray(vertical, width / sumVertical + 1)\n\thorizontal = repeatArray(horizontal, height / sumHorizontal + 1)\n\n\tconst verticalPath = vertical.reduce(\n\t\t({x, pathCommand}, moveRightBy) => {\n\t\t\tconst newX = x+moveRightBy;\n\t\t\tconst newLine = `M${newX},0 V${height} `;\n\n\t\t\treturn {\n\t\t\t\tx: newX,\n\t\t\t\tpathCommand: pathCommand+newLine\n\t\t\t};\n\t\t},\n\t\t{x: 0, pathCommand: ''}\n\t).pathCommand;\n\n\tconst horizontalPath = horizontal.reduce(\n\t\t({y, pathCommand}, moveDownBy) => {\n\t\t\tconst newY = y+moveDownBy;\n\t\t\tconst newLine = `M0,${newY} H${width} `;\n\n\t\t\treturn {\n\t\t\t\ty: newY,\n\t\t\t\tpathCommand: pathCommand+newLine\n\t\t\t};\n\t\t},\n\t\t{y: 0, pathCommand: ''}\n\t).pathCommand;\n\n\treturn <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox={viewBox}>\n\t\t<path stroke='#3c529e' d={verticalPath + horizontalPath} />\n\t</svg>;\n};\n\nexport default BackgroundGraph;\n","import React, { useState } from 'react';\nimport Graph, { useNode } from './graph';\n\nconst GenericNode1 : React.FC = () => {\n\tconst { Node, Draggable, uid } = useNode();\t\n\n\treturn <Node>\n\t\t<Draggable>\n\t\t<div style={{ background: 'darkgrey' }}>\n\t\t\tUid: {uid}\n\t\t</div>\n\t\t</Draggable>\n\t\t<div style={{ background: 'black' }}>\n\t\t\t<div style={{ padding: '20px'}}>\n\t\t\tgeneric node type 1\t\n\t\t\t</div>\n\t\t</div>\n\t</Node>\n}\n\nconst GenericNode2 : React.FC<{\n\tonClose?: Function\n}> = ({ onClose }) => {\n\tconst { Node, Draggable, uid } = useNode();\t\n\tconst onClick = () => {\n\t\tif(typeof onClose === 'function')\n\t\t\tonClose();\n\t}\n\n\treturn <Node>\n\t\t<Draggable>\n\t\t\t<div style={{ background: '#003' }}>\n\t\t\t\t<span>Uid: {uid}</span>\n\t\t\t\t<div style={{ padding: '20px'}}>\n\t\t\t\t\tgeneric node type 2\t\n\t\t\t\t\t<button onClick={onClick}>Close</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Draggable>\n\t</Node>\n}\n\nconst App : React.FC = () => {\n\tconst [num, setNum] = useState<{\n\t\tmax: number;\n\t\titems: number[];\n\t}>({\n\t\tmax: 0,\n\t\titems: [],\n\t});\n\tconst onClick = () => {\n\t\tconst max = num.max +1\n\t\tsetNum({\n\t\t\tmax,\n\t\t\titems: [ ...num.items, max ],\n\t\t});\n\t};\n\tconst remove = (i : number) => {\n\t\tsetNum({\n\t\t\tmax: num.max,\n\t\t\titems: num.items.filter(itm => itm !== i)\n\t\t});\n\t}\n\n\treturn <div>\n\t\t<Graph width={1200} height={500}>\n\t\t\t<GenericNode1 />\n\t\t\t<GenericNode1 />\n\t\t\t{\n\t\t\t\tnum.items.map(i => (\n\t\t\t\t\t<GenericNode2 key={i} onClose={() => remove(i)} />\n\t\t\t\t))\n\t\t\t}\n\t\t</Graph>\n\t\t<button onClick={onClick}>Add new</button>\n\t</div>\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}