{"version":3,"sources":["graph/index.tsx","graph/useDraggable.ts","app.tsx","index.tsx"],"names":["ActionType","useDraggable","ref","onDragDone","useState","dragging","initial","x","y","current","setDragging","onMouseMove","e","clientX","clientY","onMouseUp","useEffect","currentRef","addEventListener","removeEventListener","dragged","onMouseDown","initialState","nodes","edges","GraphContext","createContext","graphReducer","state","action","type","UpdatePosition","newState","index","findIndex","node","uid","push","UpdateAttribute","AddEdge","Node","children","useContext","getPosition","dispatch","updatePosition","left","top","style","position","background","userSelect","useNode","useUID","args","GraphComponent","width","height","useRef","useReducer","Provider","value","find","backgroundColor","color","overflow","GenericNode1","padding","GenericNode2","App","num","setNum","repeat","split","map","_","i","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c4139f4.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer, useRef } from 'react';\nimport { useUID } from 'react-uid';\nimport useDraggable from './useDraggable';\n\ninterface Graph {\n\tnodes: any[];\n\tedges: any[];\n}\n\nconst initialState : Graph = {\n\tnodes: [],\n\tedges: [],\n}\n\nconst GraphContext = createContext<{\n\tstate?: Graph;\n\tdispatch?: Function;\n\tgetPosition?: Function;\n\tref: { current: any };\n}>({\n\tref: { current: null }\n});\n\nenum ActionType {\n\tUpdatePosition,\n\tUpdateAttribute,\n\tAddEdge,\n\tRemoveEdge,\n};\n\ntype Uid = string;\n\ntype Actions =\n | { type: ActionType.UpdatePosition, uid: Uid, x: Number, y: Number }\n | { type: ActionType.UpdateAttribute, uid: Uid, key: String, value: any }\n | { type: ActionType.AddEdge, fromNode: Uid, toNode: Uid };\n\nconst graphReducer = (state : Graph, action: Actions) => {\n\tswitch(action.type) {\n\t\tcase ActionType.UpdatePosition:\n\t\t\tconst newState = { ...state };\n\t\t\tconst index = state.nodes.findIndex((node) => node.uid === action.uid);\n\t\t\tif(index === -1) {\n\t\t\t\tnewState.nodes.push({uid: action.uid, x: action.x, y: action.y});\n\t\t\t} else {\n\t\t\t\tnewState.nodes[index].x = action.x;\n\t\t\t\tnewState.nodes[index].y = action.y;\n\t\t\t}\n\t\t\treturn newState;\n\t\tcase ActionType.UpdateAttribute:\n\t\tcase ActionType.AddEdge:\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\treturn state;\n};\n\nconst updatePosition = (uid: Uid, x: Number, y: Number) => ({ type: ActionType.UpdatePosition, uid, x, y });\n\ninterface GraphComponentProps {\n\twidth: Number,\n\theight: Number,\n}\n\nconst GraphComponent : React.FC<GraphComponentProps> = ({ children, width, height }) => {\n\tconst ref = useRef(null);\n\tconst [state, dispatch] = useReducer(graphReducer, initialState);\n\tconst getPosition = (uid: Uid) => {\n\t\tconst node = state.nodes.find((node) => node.uid === uid);\n\t\tconst defaultValues = { x: 0, y: 0 };\n\t\treturn { ...defaultValues, ...node };\n\t}\n\n\treturn <GraphContext.Provider value={{\n\t\tstate,\n\t\tdispatch,\n\t\tgetPosition,\n\t\tref,\n\t}}>\n\t\t<div style={{\n\t\t\twidth: `${width}px`,\n\t\t\theight: `${height}px`,\n\t\t\tbackgroundColor: 'darkblue',\n\t\t\tcolor: '#eaeaea',\n\t\t\tposition: 'relative',\n\t\t\toverflow: 'hidden',\n\t\t}}\n\t\tref={ref}\n\t\t>\n\t\t{children}\n\t\t</div>\n\t</GraphContext.Provider>\n};\n\ninterface NodeProps {\n\tuid: Uid\n}\n\nconst Node : React.FC<NodeProps> = ({ children, uid }) => {\n\tconst { getPosition, dispatch, ref } = useContext(GraphContext);\n\tconst { x, y } = getPosition!(uid);\n\tconst { dragged, onMouseDown } = useDraggable(ref, () => {\n\t\tdispatch!(updatePosition(\n\t\t\tuid,\n\t\t\tx + dragged.x,\n\t\t\ty + dragged.y,\n\t\t));\n\t});\n\tconst left = x + dragged.x;\n\tconst top =  y + dragged.y;\n\n\treturn <div style={{\n\t\tposition: 'absolute',\n\t\tbackground: 'black',\n\t\tuserSelect: 'none',\n\t\tleft: `${left}px`,\n\t\ttop: `${top}px`,\n\t}}\n\tonMouseDown={onMouseDown}\n\t>\n\t\t<span>Uuid: {uid}</span>\n\t\t<div>{children}</div>\n\t</div>\n};\n\nexport const useNode = () => {\n\tconst uid = useUID();\n\t//const context = useContext(GraphContext);\n\n\treturn {\n\t\tNode: ({ ...args }) => <Node uid={uid} {...args} />,\n\t\t//setData: (key, value) => \n\t};\n}\n\nexport default GraphComponent;\n","import { useState, useEffect } from 'react';\n\nconst useDraggable = (ref: { current: any }, onDragDone : Function) => {\n\tconst [dragging, setDragging ] = useState({\n\t\tdragging: false,\n\t\tinitial: { x: 0, y: 0 },\n\t\tcurrent: { x: 0, y: 0 },\n\t});\n\tconst onMouseDown = (e : React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n\t\tsetDragging({\n\t\t\tdragging: true,\n\t\t\tinitial: {\n\t\t\t\tx: e.clientX,\n\t\t\t\ty: e.clientY,\n\t\t\t},\n\t\t\tcurrent: {\n\t\t\t\tx: e.clientX,\n\t\t\t\ty: e.clientY,\n\t\t\t}\n\t\t})\n\t};\n\tconst onMouseMove = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n\t\tif(dragging.dragging) {\n\t\t\tsetDragging({\n\t\t\t\t...dragging,\n\t\t\t\tcurrent: {\n\t\t\t\t\tx: e.clientX,\n\t\t\t\t\ty: e.clientY,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\tconst onMouseUp = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n\t\tif(dragging.dragging) {\n\t\t\tonDragDone();\n\t\t\tsetDragging({\n\t\t\t\tdragging: false,\n\t\t\t\tinitial: {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t},\n\t\t\t\tcurrent: {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tvar currentRef : any = null;\n\t\tif(ref.current) {\n\t\t\tcurrentRef = ref.current;\n\t\t\tcurrentRef.addEventListener('mousemove', onMouseMove);\n\t\t\tcurrentRef.addEventListener('mouseup', onMouseUp);\n\t\t}\n\n\t\treturn () => {\n\t\t\tif(currentRef) {\n\t\t\t\tcurrentRef.removeEventListener('mousemove', onMouseMove);\n\t\t\t\tcurrentRef.removeEventListener('mouseup', onMouseUp);\n\t\t\t}\n\t\t}\n\t});\n\n\tconst dragged = {\n\t\tx: dragging.current.x - dragging.initial.x,\n\t\ty: dragging.current.y - dragging.initial.y,\n\t}\n\n\treturn { dragged, onMouseDown };\n};\n\nexport default useDraggable;\n","import React, { useState } from 'react';\nimport Graph, { useNode } from './graph';\n\nconst GenericNode1 : React.FC = () => {\n\tconst { Node } = useNode();\t\n\n\treturn <Node>\n\t\t<div style={{ padding: '20px'}}>\n\t\tgeneric node type 1\t\n\t\t</div>\n\t</Node>\n}\n\nconst GenericNode2 : React.FC = () => {\n\tconst { Node } = useNode();\t\n\n\treturn <Node>\n\t\t<div style={{ padding: '20px'}}>\n\t\tgeneric node type 2\t\n\t\t</div>\n\t</Node>\n}\n\nconst App : React.FC = () => {\n\tconst [num, setNum] = useState(0);\n\tconst onClick = () => {\n\t\tsetNum(num + 1);\n\t};\n\n\treturn <div>\n\t\t<Graph width={1200} height={500}>\n\t\t\t<GenericNode1 />\n\t\t\t<GenericNode2 />\n\t\t\t{\n\t\t\t\t'.'.repeat(num).split('').map((_, i) => (\n\t\t\t\t\t<GenericNode2 key={i} />\n\t\t\t\t))\n\t\t\t}\n\t\t</Graph>\n\t\t<button onClick={onClick}>Add new</button>\n\t</div>\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}